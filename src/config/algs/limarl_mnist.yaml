# --- QMIX specific parameters ---

# use epsilon greedy action selector
action_selector: "epsilon_greedy"
epsilon_start: 1.0
epsilon_finish: 0.05
gamma: 0

epsilon_anneal_time: 50000 # 500000 for 6h_vs_8z

runner: "parallel"
batch_size_run: 8 # batch_size_run=4, buffer_size = 2500, batch_size=64  for 3s5z_vs_3s6z
buffer_size: 5000 #5000
batch_size: 128
optimizer: 'adam'

t_max: 1050000 #10050000

# update the target network every {} episodes
target_update_interval: 200

# use the Q_Learner to train
mac: "srvae_n_mac"
agent: "n_rnn"
agent_output_type: q

learner: "srvae_nq_learner"
mixer: "qmix"
mixing_embed_dim: 32
hypernet_embed: 64
lr: 0.001 # Learning rate for agents
td_lambda: 0.6 # 0.3 for 6h_vs_8z
optimizer: 'adam'
q_lambda: False

# rnn layer normalization
use_layer_norm: False

# orthogonal init for DNN
use_orthogonal: False
gain: 0.01

# Priority experience replay
use_per: False
per_alpha: 0.6
per_beta: 0.4
return_priority: False

#VAE params
lr_obs_vae: 0.001
lr_state_vae: 0.001
latent_dim_vae: 512
hidden_dim_vae: 512
state_hidden_encoder: 128
alpha_mu: 1 # was one
beta_kl_vae: 0.1
vae_batch: 32
training_interval: 3002  # Define the interval for training powers of two
finetuning_interval: 5002
start_training: 524 # useless for now
train_state_pred: True
use_srvae_mode: True
srvae_train_n_repeat: 10
srvae_max_pretraining_episode: 1000
buffer_size_rvae: 128

name: "srvae_mnist_interval_3002_steps_200_train_with_mu_alpha_1_with_z_512_train_half_epoch_harder_Sanity_with_RL_training"
